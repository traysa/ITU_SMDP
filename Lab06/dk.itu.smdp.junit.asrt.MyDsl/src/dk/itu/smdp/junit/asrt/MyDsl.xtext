// automatically generated by Xtext
grammar dk.itu.smdp.junit.asrt.MyDsl with org.eclipse.xtext.common.Terminals

import "http://www.itu.dk/people/wasowski/dk.itu.smdp.junit.asrt" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model returns Model:
	{Model}
	'Model'
	'{'
		('assertMethods' '{' assertMethods+=AssertMethod ( "," assertMethods+=AssertMethod)* '}' )?
	'}';



Exp returns Exp:
	UOp | NULL | Id0 | BOp_Impl | BOpMethod | FunCall;

AssertMethod returns AssertMethod:
	'AssertMethod'
	name=EString
	'{'
		'params' '{' params+=Parameter ( "," params+=Parameter)* '}' 
		'bodyExpr' bodyExpr=Exp
	'}';

EString returns ecore::EString:
	STRING | ID;

Parameter returns Parameter:
	'Parameter'
	name=EString
	'{'
		'type' type=SimpleTypeEnum
	'}';

enum SimpleTypeEnum returns SimpleTypeEnum:
				BOOLEAN = 'BOOLEAN' | OBJECT = 'OBJECT' | DOUBLE = 'DOUBLE' | LONG = 'LONG' | SHORT = 'SHORT' | INT = 'INT' | FLOAT = 'FLOAT' | CHAR = 'CHAR';

UOp returns UOp:
	'UOp'
	'{'
		'operator' operator=EString
		'expr' expr=Exp
	'}';

NULL returns NULL:
	{NULL}
	'NULL'
	;

Id0 returns Id:
	{Id}
	'Id'
	name=EString;

BOp_Impl returns BOp:
	'BOp'
	'{'
		'operator' operator=EString
		'lexpr' lexpr=Exp
		'rexpr' rexpr=Exp
	'}';

BOpMethod returns BOpMethod:
	'BOpMethod'
	'{'
		'operator' operator=EString
		'lexpr' lexpr=Exp
		'rexpr' rexpr=Exp
	'}';

FunCall returns FunCall:
	{FunCall}
	'FunCall'
	name=EString
	'{'
		('arg' '{' arg+=Exp ( "," arg+=Exp)* '}' )?
	'}';
